name: Lighthouse

on:
  pull_request:
  merge_group:

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  build-plugin:
    name: Build plugin
    runs-on: ubuntu-latest
    if: startsWith( github.repository, 'elementor/' )
    outputs:
      changelog_diff: ${{ steps.changelog_diff_files.outputs.diff }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Check if this is only a changelog PR
        id: changelog_diff_files
        uses: technote-space/get-diff-action@v6
        with:
          # PATTERNS are:
          # Everything: **/*
          # Everything in directories starting with a period: .*/**/*
          # Not readme.txt: !readme.txt
          PATTERNS: |
            **/*
            .*/**/*
            !readme.txt
      - name: Install Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Cache node modules
        if: github.event.pull_request.title == null || steps.changelog_diff_files.outputs.diff
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: github.event.pull_request.title == null || steps.changelog_diff_files.outputs.diff
        run: npm ci
      - name: Build
        if: github.event.pull_request.title == null || steps.changelog_diff_files.outputs.diff
        run: npx grunt build
      - name: Save build to cache
        if: github.event.pull_request.title == null || steps.changelog_diff_files.outputs.diff
        uses: actions/cache@v2
        id: restore-build
        with:
          path: ./build/*
          key: ${{ github.sha }}

  lighthouse_test:
    name: Lighthouse test - WP ${{ matrix.wpCoreVersion }} on PHP ${{ matrix.phpVersion }}
    runs-on: ubuntu-latest
    needs: [build-plugin]
    if: ${{ github.event.pull_request.title == null || needs.build-plugin.outputs.changelog_diff }}
    strategy:
      matrix:
        include:
          - phpVersion: '8.0'
            wpCoreVersion: 'master'
          - phpVersion: '7.4'
            wpCoreVersion: 'latest'
    steps:
      - name: Checkout source code
        if: matrix.wpCoreVersion != 'master'
        uses: actions/checkout@v3
      - name: Install Node.js 18.x
        if: matrix.wpCoreVersion != 'master'
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      
      - name: Restore NPM from cache
        if: matrix.wpCoreVersion != 'master'
        uses: actions/cache/restore@v3
        id: restore-npm
        with:
            path: ~/.npm
            key: npm-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: Restore build from cache
        if: matrix.wpCoreVersion != 'master'
        uses: actions/cache/restore@v3
        id: restore-build
        with:
          path: ./build/*
          key: ${{ github.sha }}
      - name: Install node modules
        if: matrix.wpCoreVersion != 'master'
        run: npm ci
      - name: Run wp-env
        if: matrix.wpCoreVersion != 'master'
        run: |
          npm run start-local-server
          npm run test:setup:playwright
      - name: Install lhci
        if: matrix.wpCoreVersion != 'master'
        run: |
          npm ci
          npm install --no-package-lock --no-save @lhci/cli@0.11.1
      - name: WordPress debug information
        if: matrix.wpCoreVersion != 'master'
        run: |
          npx wp-env run cli wp core version
          npx wp-env run cli wp --info
      - name: Run Lighthouse tests
        if: matrix.wpCoreVersion != 'master'
        run: |
          bash "${GITHUB_WORKSPACE}/.github/scripts/run-lighthouse-tests.sh"
      - name: Save HTML dumps on failure
        if: failure() || matrix.wpCoreVersion != 'master'
        run: |
          bash "${GITHUB_WORKSPACE}/.github/scripts/save-lighthouse-pages-html-dumps.sh"
      - name: Upload Lighthouse reports on failure
        if: failure() || matrix.wpCoreVersion != 'master'
        uses: actions/upload-artifact@v2
        with:
          name: lighthouseci-reports
          path: ${{ github.workspace }}/.lighthouseci/reports/**/*
          retention-days: 7
      - name: Upload Lighthouse HTML dumps on failure
        if: failure() || matrix.wpCoreVersion != 'master'
        uses: actions/upload-artifact@v2
        with:
          name: lighthouseci-htmls
          path: ${{ github.workspace }}/.lighthouseci/dumps/**/*
          retention-days: 7
      - name: Notify slack on failure
        if: failure() && github.event_name == 'schedule'
        env:
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          SLACK_CHANNEL: ${{ secrets.SLACK_LIGHTHOUSE_CHANNEL }}
          SLACK_BOT_NAME: ElementorBot
        run: |
          MESSAGE_TEXT="@channel Repo: *$GITHUB_REPOSITORY* Workflow: *$GITHUB_WORKFLOW* is FAILED - <$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID|link>"
          curl -X POST "https://slack.com/api/chat.postMessage" -d "username=${SLACK_BOT_NAME}&token=${SLACK_TOKEN}&channel=${SLACK_CHANNEL}&text=${MESSAGE_TEXT}&link_names=true"

  lighthouse:
    needs: lighthouse_test
    if: ${{ always() }} # Will be run even if 'Lighthouse' matrix will be skipped
    runs-on: ubuntu-22.04
    name: Lighthouse - Test Results
    steps:
      - name: Test status
        run: echo "Test status is - ${{ needs.lighthouse_test.result }}"
      - name: Check lighthouse_test matrix status
        if: ${{ needs.lighthouse_test.result != 'success' && needs.lighthouse_test.result != 'skipped' }}
        run: exit 1
